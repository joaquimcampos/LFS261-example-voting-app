pipeline { 
  agent none
  stages{ 
    // Vote app
    stage('vote-build'){ 
      agent{
        docker{
          image 'python:3.11-slim'
          args '--user root'
        }
      }
      when {
        changeset '**/vote/**'
      }
      steps{ 
        echo 'Compiling vote app.' 
        dir(path: 'vote'){
          sh "pip install -r requirements.txt"
        } 
      } 
    }

    stage('vote-test'){ 
      agent {
        docker{
          image 'python:3.11-slim'
          args '--user root'
        }
      }
      when {
        changeset '**/vote/**'
      }
      steps{ 
        echo 'Running Unit Tests on vote app.' 
        dir(path: 'vote'){   
          sh "pip install -r requirements.txt"
          sh 'nosetests -v'
        } 
      } 
    }

    stage('vote-integration'){ 
      agent any 
      when{ 
        changeset "**/vote/**" 
        branch 'master'
      } 
      steps{ 
        echo 'Running Integration Tests on vote app' 
        dir(path: 'vote'){ 
          sh 'sh integration_test.sh' 
        } 
      } 
    } 

    stage('vote-docker-package'){
      agent any
      steps{
        echo 'Packaging vote app with docker'
        script{
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            // ./vote is the path to the Dockerfile that Jenkins will find from the Github repo
            def voteImage = docker.build("jcampos15/vote:v${env.BUILD_ID}", "./vote")
            voteImage.push()
            voteImage.push("${env.BRANCH_NAME}")
            voteImage.push("latest")
          }
        }
      }
    }
  }

  post {
    always{
      echo 'Pipeline for vote is complete'
    }
  }
} 
